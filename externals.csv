Caller Type,Caller Type Words,Caller Tag,Caller Tag Words,Caller Method,Caller Method Words,Caller Super Types,Calling Super Types Words,Called  Type,Called Type Words,Called  Tagged Type,Called Tagged Type Words,Called Method,Called Method Words
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,String,string,java.lang.String,string,equals,equals
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,String,string,java.lang.String,string,equals,equals
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,String,string,java.lang.String,string,equals,equals
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,String,string,java.lang.String,string,equals,equals
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AbstractComparatorEvaluator,abstract,AbstractComparatorEvaluator,abstract,comparator,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setTracerShowInfo,set:tracer:show:info
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setBufferTracedMessages,set:buffer:traced:messages
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxPrintedTraces,set:max:printed:traces
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxTraces,set:max:traces
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,grader.basics.execution.BasicProjectExecution,basic:project:execution,grader.basics.execution.BasicProjectExecution,basic:project:execution,setProcessTimeOut,set:process:time:out
localchecks.RunF21A5Tests,run:a:tests,RunF21A5Tests,run:a:tests,main,main,Evaluator,none,gradingTools.comp524f21.assignment5.F21Assignment5Suite,assignment:suite,gradingTools.comp524f21.assignment5.F21Assignment5Suite,assignment:suite,main,main
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:OperationRegisterer,operation,tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,QuoteEvaluator,quote
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.ListEvaluator,list,@ListEvaluator,list,ListEvaluator,list
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.EvalEvaluator,none,@EvalEvaluator,none,EvalEvaluator,none
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.LoadEvaluator,load,@LoadEvaluator,load,LoadEvaluator,load
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.CondEvaluator,none,@CondEvaluator,none,CondEvaluator,none
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.LessThanEvaluator,less:than,@LTEvaluator,lt,LessThanEvaluator,less:than
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.LessThanEqualsEvaluator,less:than:equals,@LTEEvaluator,none,LessThanEqualsEvaluator,less:than:equals
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.GreaterThanEvaluator,greater:than,@GTEvaluator,none,GreaterThanEvaluator,greater:than
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.GreaterThanEqualsEvaluator,greater:than:equals,@GTEEvaluator,gte,GreaterThanEqualsEvaluator,greater:than:equals
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.AndEvaluator,and,@AndEvaluator,and,AndEvaluator,and
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.OrEvaluator,or,@OrEvaluator,or,OrEvaluator,or
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:OperationRegisterer,operation,tasks.NotEvaluator,not,@NotEvaluator,not,NotEvaluator,not
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.StringAtom,string:atom,main.lisp.parser.terms.StringAtom,string:atom,getValue,get:value
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,java.nio.file.Paths,paths,java.nio.file.Paths,paths,get,get
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,java.nio.file.Files,files,java.nio.file.Files,files,readAllLines,read:all:lines
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,newInput,new:input
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,get,get
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
tasks.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.MainOverride,main:override,@Main,main,main,main,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,setClass,set:class
tasks.MainOverride,main:override,@Main,main,main,main,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,tasks.OperationRegistererOverride,operation:override,@CustomOperationRegisterer,custom:operation,registerAll,register:all
tasks.MainOverride,main:override,@Main,main,main,main,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator,operation,main.Main,main,main.Main,main,main,main
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator,operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,isList,is:list
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,$(,none,(,none,isNIL,is:nil
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,$(,none,(,none,toString,to:string
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,$(,none,(,none,toString,to:string
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toString,to:string
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toString,to:string
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
tasks.BasicExpressionOverride,basic:expression:override,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression,operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
tasks.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:OperationRegisterer:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
